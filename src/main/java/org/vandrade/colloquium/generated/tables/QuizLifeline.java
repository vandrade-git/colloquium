/*
 * This file is generated by jOOQ.
 */
package org.vandrade.colloquium.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vandrade.colloquium.generated.DefaultSchema;
import org.vandrade.colloquium.generated.Keys;
import org.vandrade.colloquium.generated.tables.records.QuizLifelineRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizLifeline extends TableImpl<QuizLifelineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>quiz_lifeline</code>
     */
    public static final QuizLifeline QUIZ_LIFELINE = new QuizLifeline();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuizLifelineRecord> getRecordType() {
        return QuizLifelineRecord.class;
    }

    /**
     * The column <code>quiz_lifeline.id</code>.
     */
    public final TableField<QuizLifelineRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>quiz_lifeline.created_at</code>.
     */
    public final TableField<QuizLifelineRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>quiz_lifeline.updated_at</code>.
     */
    public final TableField<QuizLifelineRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>quiz_lifeline.lifeline_template_id</code>.
     */
    public final TableField<QuizLifelineRecord, Integer> LIFELINE_TEMPLATE_ID = createField(DSL.name("lifeline_template_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz_lifeline.quiz_id</code>.
     */
    public final TableField<QuizLifelineRecord, Integer> QUIZ_ID = createField(DSL.name("quiz_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz_lifeline.used</code>.
     */
    public final TableField<QuizLifelineRecord, Boolean> USED = createField(DSL.name("used"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");

    private QuizLifeline(Name alias, Table<QuizLifelineRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuizLifeline(Name alias, Table<QuizLifelineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>quiz_lifeline</code> table reference
     */
    public QuizLifeline(String alias) {
        this(DSL.name(alias), QUIZ_LIFELINE);
    }

    /**
     * Create an aliased <code>quiz_lifeline</code> table reference
     */
    public QuizLifeline(Name alias) {
        this(alias, QUIZ_LIFELINE);
    }

    /**
     * Create a <code>quiz_lifeline</code> table reference
     */
    public QuizLifeline() {
        this(DSL.name("quiz_lifeline"), null);
    }

    public <O extends Record> QuizLifeline(Table<O> child, ForeignKey<O, QuizLifelineRecord> key) {
        super(child, key, QUIZ_LIFELINE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<QuizLifelineRecord, Integer> getIdentity() {
        return (Identity<QuizLifelineRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<QuizLifelineRecord> getPrimaryKey() {
        return Keys.PK_QUIZ_LIFELINE;
    }

    @Override
    public List<UniqueKey<QuizLifelineRecord>> getKeys() {
        return Arrays.<UniqueKey<QuizLifelineRecord>>asList(Keys.PK_QUIZ_LIFELINE, Keys.SQLITE_AUTOINDEX_QUIZ_LIFELINE_1);
    }

    @Override
    public List<ForeignKey<QuizLifelineRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuizLifelineRecord, ?>>asList(Keys.FK_QUIZ_LIFELINE_LIFELINE_TEMPLATE_1, Keys.FK_QUIZ_LIFELINE_QUIZ_1);
    }

    private transient LifelineTemplate _lifelineTemplate;
    private transient Quiz _quiz;

    public LifelineTemplate lifelineTemplate() {
        if (_lifelineTemplate == null)
            _lifelineTemplate = new LifelineTemplate(this, Keys.FK_QUIZ_LIFELINE_LIFELINE_TEMPLATE_1);

        return _lifelineTemplate;
    }

    public Quiz quiz() {
        if (_quiz == null)
            _quiz = new Quiz(this, Keys.FK_QUIZ_LIFELINE_QUIZ_1);

        return _quiz;
    }

    @Override
    public QuizLifeline as(String alias) {
        return new QuizLifeline(DSL.name(alias), this);
    }

    @Override
    public QuizLifeline as(Name alias) {
        return new QuizLifeline(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizLifeline rename(String name) {
        return new QuizLifeline(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizLifeline rename(Name name) {
        return new QuizLifeline(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, LocalDateTime, Integer, Integer, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
