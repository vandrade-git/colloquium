/*
 * This file is generated by jOOQ.
 */
package org.vandrade.colloquium.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.vandrade.colloquium.generated.tables.QuizQuestion;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizQuestionRecord extends UpdatableRecordImpl<QuizQuestionRecord> implements Record8<Integer, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>quiz_question.id</code>.
     */
    public QuizQuestionRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>quiz_question.created_at</code>.
     */
    public QuizQuestionRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>quiz_question.updated_at</code>.
     */
    public QuizQuestionRecord setUpdatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>quiz_question.question_template_id</code>.
     */
    public QuizQuestionRecord setQuestionTemplateId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.question_template_id</code>.
     */
    public Integer getQuestionTemplateId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>quiz_question.quiz_id</code>.
     */
    public QuizQuestionRecord setQuizId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.quiz_id</code>.
     */
    public Integer getQuizId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>quiz_question.answer</code>.
     */
    public QuizQuestionRecord setAnswer(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.answer</code>.
     */
    public Integer getAnswer() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>quiz_question.time_remaining</code>.
     */
    public QuizQuestionRecord setTimeRemaining(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.time_remaining</code>.
     */
    public Integer getTimeRemaining() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>quiz_question.answered</code>.
     */
    public QuizQuestionRecord setAnswered(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>quiz_question.answered</code>.
     */
    public Boolean getAnswered() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return QuizQuestion.QUIZ_QUESTION.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return QuizQuestion.QUIZ_QUESTION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return QuizQuestion.QUIZ_QUESTION.UPDATED_AT;
    }

    @Override
    public Field<Integer> field4() {
        return QuizQuestion.QUIZ_QUESTION.QUESTION_TEMPLATE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return QuizQuestion.QUIZ_QUESTION.QUIZ_ID;
    }

    @Override
    public Field<Integer> field6() {
        return QuizQuestion.QUIZ_QUESTION.ANSWER;
    }

    @Override
    public Field<Integer> field7() {
        return QuizQuestion.QUIZ_QUESTION.TIME_REMAINING;
    }

    @Override
    public Field<Boolean> field8() {
        return QuizQuestion.QUIZ_QUESTION.ANSWERED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public Integer component4() {
        return getQuestionTemplateId();
    }

    @Override
    public Integer component5() {
        return getQuizId();
    }

    @Override
    public Integer component6() {
        return getAnswer();
    }

    @Override
    public Integer component7() {
        return getTimeRemaining();
    }

    @Override
    public Boolean component8() {
        return getAnswered();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public Integer value4() {
        return getQuestionTemplateId();
    }

    @Override
    public Integer value5() {
        return getQuizId();
    }

    @Override
    public Integer value6() {
        return getAnswer();
    }

    @Override
    public Integer value7() {
        return getTimeRemaining();
    }

    @Override
    public Boolean value8() {
        return getAnswered();
    }

    @Override
    public QuizQuestionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value4(Integer value) {
        setQuestionTemplateId(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value5(Integer value) {
        setQuizId(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value6(Integer value) {
        setAnswer(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value7(Integer value) {
        setTimeRemaining(value);
        return this;
    }

    @Override
    public QuizQuestionRecord value8(Boolean value) {
        setAnswered(value);
        return this;
    }

    @Override
    public QuizQuestionRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, Integer value4, Integer value5, Integer value6, Integer value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizQuestionRecord
     */
    public QuizQuestionRecord() {
        super(QuizQuestion.QUIZ_QUESTION);
    }

    /**
     * Create a detached, initialised QuizQuestionRecord
     */
    public QuizQuestionRecord(Integer id, LocalDateTime createdAt, LocalDateTime updatedAt, Integer questionTemplateId, Integer quizId, Integer answer, Integer timeRemaining, Boolean answered) {
        super(QuizQuestion.QUIZ_QUESTION);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setQuestionTemplateId(questionTemplateId);
        setQuizId(quizId);
        setAnswer(answer);
        setTimeRemaining(timeRemaining);
        setAnswered(answered);
    }
}
