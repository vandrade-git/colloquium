/*
 * This file is generated by jOOQ.
 */
package org.vandrade.colloquium.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.vandrade.colloquium.generated.tables.QuestionTemplate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionTemplateRecord extends UpdatableRecordImpl<QuestionTemplateRecord> implements Record9<Integer, LocalDateTime, LocalDateTime, String, String, String, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>question_template.id</code>.
     */
    public QuestionTemplateRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>question_template.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>question_template.created_at</code>.
     */
    public QuestionTemplateRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>question_template.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>question_template.updated_at</code>.
     */
    public QuestionTemplateRecord setUpdatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>question_template.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>question_template.contents</code>.
     */
    public QuestionTemplateRecord setContents(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>question_template.contents</code>.
     */
    public String getContents() {
        return (String) get(3);
    }

    /**
     * Setter for <code>question_template.answer_1</code>.
     */
    public QuestionTemplateRecord setAnswer_1(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>question_template.answer_1</code>.
     */
    public String getAnswer_1() {
        return (String) get(4);
    }

    /**
     * Setter for <code>question_template.answer_2</code>.
     */
    public QuestionTemplateRecord setAnswer_2(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>question_template.answer_2</code>.
     */
    public String getAnswer_2() {
        return (String) get(5);
    }

    /**
     * Setter for <code>question_template.answer_3</code>.
     */
    public QuestionTemplateRecord setAnswer_3(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>question_template.answer_3</code>.
     */
    public String getAnswer_3() {
        return (String) get(6);
    }

    /**
     * Setter for <code>question_template.answer_4</code>.
     */
    public QuestionTemplateRecord setAnswer_4(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>question_template.answer_4</code>.
     */
    public String getAnswer_4() {
        return (String) get(7);
    }

    /**
     * Setter for <code>question_template.correct_answer</code>.
     */
    public QuestionTemplateRecord setCorrectAnswer(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>question_template.correct_answer</code>.
     */
    public Integer getCorrectAnswer() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, LocalDateTime, LocalDateTime, String, String, String, String, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, LocalDateTime, LocalDateTime, String, String, String, String, String, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return QuestionTemplate.QUESTION_TEMPLATE.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return QuestionTemplate.QUESTION_TEMPLATE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return QuestionTemplate.QUESTION_TEMPLATE.UPDATED_AT;
    }

    @Override
    public Field<String> field4() {
        return QuestionTemplate.QUESTION_TEMPLATE.CONTENTS;
    }

    @Override
    public Field<String> field5() {
        return QuestionTemplate.QUESTION_TEMPLATE.ANSWER_1;
    }

    @Override
    public Field<String> field6() {
        return QuestionTemplate.QUESTION_TEMPLATE.ANSWER_2;
    }

    @Override
    public Field<String> field7() {
        return QuestionTemplate.QUESTION_TEMPLATE.ANSWER_3;
    }

    @Override
    public Field<String> field8() {
        return QuestionTemplate.QUESTION_TEMPLATE.ANSWER_4;
    }

    @Override
    public Field<Integer> field9() {
        return QuestionTemplate.QUESTION_TEMPLATE.CORRECT_ANSWER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public String component4() {
        return getContents();
    }

    @Override
    public String component5() {
        return getAnswer_1();
    }

    @Override
    public String component6() {
        return getAnswer_2();
    }

    @Override
    public String component7() {
        return getAnswer_3();
    }

    @Override
    public String component8() {
        return getAnswer_4();
    }

    @Override
    public Integer component9() {
        return getCorrectAnswer();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public String value4() {
        return getContents();
    }

    @Override
    public String value5() {
        return getAnswer_1();
    }

    @Override
    public String value6() {
        return getAnswer_2();
    }

    @Override
    public String value7() {
        return getAnswer_3();
    }

    @Override
    public String value8() {
        return getAnswer_4();
    }

    @Override
    public Integer value9() {
        return getCorrectAnswer();
    }

    @Override
    public QuestionTemplateRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value4(String value) {
        setContents(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value5(String value) {
        setAnswer_1(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value6(String value) {
        setAnswer_2(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value7(String value) {
        setAnswer_3(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value8(String value) {
        setAnswer_4(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord value9(Integer value) {
        setCorrectAnswer(value);
        return this;
    }

    @Override
    public QuestionTemplateRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, String value4, String value5, String value6, String value7, String value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionTemplateRecord
     */
    public QuestionTemplateRecord() {
        super(QuestionTemplate.QUESTION_TEMPLATE);
    }

    /**
     * Create a detached, initialised QuestionTemplateRecord
     */
    public QuestionTemplateRecord(Integer id, LocalDateTime createdAt, LocalDateTime updatedAt, String contents, String answer_1, String answer_2, String answer_3, String answer_4, Integer correctAnswer) {
        super(QuestionTemplate.QUESTION_TEMPLATE);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setContents(contents);
        setAnswer_1(answer_1);
        setAnswer_2(answer_2);
        setAnswer_3(answer_3);
        setAnswer_4(answer_4);
        setCorrectAnswer(correctAnswer);
    }
}
