/*
 * This file is generated by jOOQ.
 */
package org.vandrade.colloquium.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vandrade.colloquium.generated.DefaultSchema;
import org.vandrade.colloquium.generated.Keys;
import org.vandrade.colloquium.generated.tables.records.StatisticsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Statistics extends TableImpl<StatisticsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>statistics</code>
     */
    public static final Statistics STATISTICS = new Statistics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatisticsRecord> getRecordType() {
        return StatisticsRecord.class;
    }

    /**
     * The column <code>statistics.id</code>.
     */
    public final TableField<StatisticsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>statistics.created_at</code>.
     */
    public final TableField<StatisticsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>statistics.updated_at</code>.
     */
    public final TableField<StatisticsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>statistics.quiz_id</code>.
     */
    public final TableField<StatisticsRecord, Integer> QUIZ_ID = createField(DSL.name("quiz_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>statistics.data</code>.
     */
    public final TableField<StatisticsRecord, String> DATA = createField(DSL.name("data"), SQLDataType.CLOB, this, "");

    private Statistics(Name alias, Table<StatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Statistics(Name alias, Table<StatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>statistics</code> table reference
     */
    public Statistics(String alias) {
        this(DSL.name(alias), STATISTICS);
    }

    /**
     * Create an aliased <code>statistics</code> table reference
     */
    public Statistics(Name alias) {
        this(alias, STATISTICS);
    }

    /**
     * Create a <code>statistics</code> table reference
     */
    public Statistics() {
        this(DSL.name("statistics"), null);
    }

    public <O extends Record> Statistics(Table<O> child, ForeignKey<O, StatisticsRecord> key) {
        super(child, key, STATISTICS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<StatisticsRecord, Integer> getIdentity() {
        return (Identity<StatisticsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<StatisticsRecord> getPrimaryKey() {
        return Keys.PK_STATISTICS;
    }

    @Override
    public List<UniqueKey<StatisticsRecord>> getKeys() {
        return Arrays.<UniqueKey<StatisticsRecord>>asList(Keys.PK_STATISTICS, Keys.SQLITE_AUTOINDEX_STATISTICS_1);
    }

    @Override
    public List<ForeignKey<StatisticsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatisticsRecord, ?>>asList(Keys.FK_STATISTICS_QUIZ_1);
    }

    private transient Quiz _quiz;

    public Quiz quiz() {
        if (_quiz == null)
            _quiz = new Quiz(this, Keys.FK_STATISTICS_QUIZ_1);

        return _quiz;
    }

    @Override
    public Statistics as(String alias) {
        return new Statistics(DSL.name(alias), this);
    }

    @Override
    public Statistics as(Name alias) {
        return new Statistics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Statistics rename(String name) {
        return new Statistics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Statistics rename(Name name) {
        return new Statistics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDateTime, LocalDateTime, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
